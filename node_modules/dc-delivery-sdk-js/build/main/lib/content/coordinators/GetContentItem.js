"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Url_1 = require("../../utils/Url");
var JsonWalker_1 = require("../../utils/JsonWalker");
var ContentItem_1 = require("../model/ContentItem");
/**
 * @hidden
 */
var LD_ID = '@id';
/**
 * @hidden
 */
var LD_TYPE = '@type';
/**
 * @hidden
 */
var LD_GRAPH = '@graph';
/**
 * @hidden
 */
var GetContentItem = /** @class */ (function () {
    function GetContentItem(config, contentClient, mapper) {
        this.config = config;
        this.contentClient = contentClient;
        this.mapper = mapper;
    }
    GetContentItem.prototype.getContentItem = function (id) {
        var _this = this;
        var url = this.getUrl({
            'sys.iri': "http://content.cms.amplience.com/" + id
        });
        return this.contentClient.get(url).then(function (response) {
            var contentItems = _this.processResponse(response.data);
            if (contentItems.length === 0) {
                return Promise.reject("Content item \"" + id + "\" was not found");
            }
            var item = contentItems.find(function (x) { return x._meta.deliveryId === id; });
            if (!item) {
                return Promise.reject("Content item \"" + id + "\" was not found");
            }
            return Promise.resolve(_this.hydrateContentItem(item));
        });
    };
    GetContentItem.prototype.getUrl = function (query) {
        var args = [
            ['query', JSON.stringify(query)],
            ['fullBodyObject', 'true'],
            ['scope', 'tree'],
            ['store', this.config.account]
        ];
        if (this.config.locale) {
            args.push(['locale', this.config.locale]);
        }
        var queryString = Url_1.encodeQueryString(args);
        return "/cms/content/query?" + queryString;
    };
    /**
     * Convert plain content JSON into ContentItem instamce
     * @param content
     */
    GetContentItem.prototype.hydrateContentItem = function (content) {
        var contentItem = new ContentItem_1.ContentItem();
        contentItem.body = this.mapper.toMappedContent(content);
        return contentItem;
    };
    /**
     * Pre-processes the response to create a single content item object
     * with all linked content items inlined.
     * @param data Response from content query API
     */
    GetContentItem.prototype.processResponse = function (data) {
        var _this = this;
        if (!data.result || !data[LD_GRAPH] || !Array.isArray(data.result)) {
            return [];
        }
        else {
            var graph = data[LD_GRAPH];
            var graphChildrenById_1 = {};
            graph.forEach(function (child) { return (graphChildrenById_1[child[LD_ID]] = child); });
            return data.result.map(function (result) {
                result = graphChildrenById_1[result[LD_ID]];
                // inline linked items
                result = JsonWalker_1.walkAndReplace(result, {
                    beforeWalk: function (node) {
                        if (typeof node === 'object') {
                            if (node[LD_ID]) {
                                node = graphChildrenById_1[node[LD_ID]];
                            }
                        }
                        return node;
                    }
                });
                // upgrade legacy content & remove json-ld
                result = JsonWalker_1.walkAndReplace(result, {
                    beforeWalk: function (node) {
                        node = _this.upgradeLegacyContent(node);
                        node = _this.injectMetaData(node);
                        node = _this.removeJsonLD(node);
                        return node;
                    }
                });
                return result;
            });
        }
    };
    /**
     * Content produced by older versions do not include _meta.schema.
     * This function inserts those values to normalize the output
     */
    GetContentItem.prototype.upgradeLegacyContent = function (node) {
        if (!node) {
            return node;
        }
        var type = node[LD_TYPE];
        var id = node[LD_ID];
        var isImage = id && id.indexOf('http://image.cms.amplience.com/') === 0;
        var isVideo = id && id.indexOf('http://video.cms.amplience.com/') === 0;
        if (type || isImage || isVideo) {
            if (!node._meta) {
                node._meta = {};
            }
            if (type) {
                if (!node._meta.schema) {
                    node._meta.schema = type;
                }
                if (!node._meta.name && node._title) {
                    node._meta.name = node._title;
                }
            }
            else if (isImage) {
                node._meta.schema =
                    'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link';
            }
            else if (isVideo) {
                node._meta.schema =
                    'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';
            }
        }
        return node;
    };
    /**
     * Injects additional meta data which is lost by removing
     * the JSON-LD properties
     */
    GetContentItem.prototype.injectMetaData = function (node) {
        if (node) {
            var id = node[LD_ID];
            if (id) {
                if (id.indexOf('http://content.cms.amplience.com/') === 0) {
                    node._meta = node._meta || {};
                    node._meta.deliveryId = id.slice(33);
                }
                else if (id.indexOf('http://image.cms.amplience.com/') === 0 ||
                    id.indexOf('http://video.cms.amplience.com/') === 0) {
                    node.id = id.slice(31);
                }
            }
        }
        return node;
    };
    /**
     * JSON-LD keywords are just for delivery payload
     */
    GetContentItem.prototype.removeJsonLD = function (node) {
        if (node) {
            delete node[LD_TYPE];
            delete node[LD_ID];
        }
        return node;
    };
    return GetContentItem;
}());
exports.GetContentItem = GetContentItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2V0Q29udGVudEl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbnRlbnQvY29vcmRpbmF0b3JzL0dldENvbnRlbnRJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsdUNBQW9EO0FBQ3BELHFEQUF3RDtBQUN4RCxvREFBbUQ7QUFJbkQ7O0dBRUc7QUFDSCxJQUFNLEtBQUssR0FBRyxLQUFLLENBQUM7QUFFcEI7O0dBRUc7QUFDSCxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFFeEI7O0dBRUc7QUFDSCxJQUFNLFFBQVEsR0FBRyxRQUFRLENBQUM7QUFFMUI7O0dBRUc7QUFDSDtJQUNFLHdCQUNtQixNQUEyQixFQUMzQixhQUE0QixFQUM1QixNQUFxQjtRQUZyQixXQUFNLEdBQU4sTUFBTSxDQUFxQjtRQUMzQixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM1QixXQUFNLEdBQU4sTUFBTSxDQUFlO0lBQ3JDLENBQUM7SUFFSix1Q0FBYyxHQUFkLFVBQXNDLEVBQVU7UUFBaEQsaUJBbUJDO1FBbEJDLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdEIsU0FBUyxFQUFFLHNDQUFvQyxFQUFJO1NBQ3BELENBQUMsQ0FBQztRQUVILE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsUUFBUTtZQUM5QyxJQUFNLFlBQVksR0FBRyxLQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUV6RCxJQUFJLFlBQVksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUM3QixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsb0JBQWlCLEVBQUUscUJBQWlCLENBQUMsQ0FBQzthQUM3RDtZQUVELElBQU0sSUFBSSxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBQSxDQUFDLElBQUks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