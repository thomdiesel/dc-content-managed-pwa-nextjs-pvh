"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var JsonWalker_1 = require("../../utils/JsonWalker");
var FragmentMeta_1 = require("../model/FragmentMeta");
var ContentMeta_1 = require("../model/ContentMeta");
var Image_1 = require("../../media/Image");
var Video_1 = require("../../media/Video");
var ContentReference_1 = require("../model/ContentReference");
/**
 * @hidden
 * ContentMapper provides functionality to convert simple JSON content into hydrated model classes
 * with helper functions. If a mapper is not defined for a schema it will remain as plain JSON.
 */
var ContentMapper = /** @class */ (function () {
    function ContentMapper(config) {
        this.config = config;
        this.mappers = [];
        this.registerBuiltInMappers();
    }
    /**
     * Registers a custom model / fn to hydrate a specific schema
     * @param schema JSON schema ID or Regex that matches against the JSON schema ID
     * @param fn Model Class or Function that can convert the schema
     */
    ContentMapper.prototype.addSchema = function (schema, fn) {
        if (typeof schema === 'string') {
            this.addCustomMapper(function (fragment) {
                if (fragment._meta.schema === schema) {
                    return fn(fragment);
                }
            });
        }
        else {
            this.addCustomMapper(function (fragment) {
                if (schema.test(fragment._meta.schema)) {
                    return fn(fragment);
                }
            });
        }
    };
    /**
     * Registers a custom function to hydrate content fragments
     * @param fn Mapper function
     */
    ContentMapper.prototype.addCustomMapper = function (fn) {
        this.mappers.push(fn);
    };
    /**
     * Converts the provided content into hydrated model classes
     * @param content Content to convert
     */
    ContentMapper.prototype.toMappedContent = function (content) {
        var _this = this;
        return JsonWalker_1.walkAndReplace(content, {
            afterWalk: function (node) {
                if (FragmentMeta_1.FragmentMeta.isFragment(node)) {
                    return _this.mapFragment(node);
                }
                return node;
            }
        });
    };
    /**
     * Converts a single fragment using the registered mappers
     * @param fragment Fragment to convert
     */
    ContentMapper.prototype.mapFragment = function (fragment) {
        for (var _i = 0, _a = this.mappers; _i < _a.length; _i++) {
            var mapper = _a[_i];
            var result = mapper(fragment);
            if (result) {
                return result;
            }
        }
        return fragment;
    };
    /**
     * Registers built in mappers
     */
    ContentMapper.prototype.registerBuiltInMappers = function () {
        this.addCustomMapper(this.convertContentReference.bind(this));
        this.addCustomMapper(this.convertContentMeta.bind(this));
        this.addCustomMapper(this.convertImage.bind(this));
        this.addCustomMapper(this.convertVideo.bind(this));
    };
    /**
     * Converts _meta inside Content Items into a ContentMeta instance
     * @param fragment
     */
    ContentMapper.prototype.convertContentMeta = function (fragment) {
        if (ContentMeta_1.ContentMeta.isContentBody(fragment)) {
            return __assign({}, fragment, { _meta: new ContentMeta_1.ContentMeta(fragment._meta) });
        }
    };
    /**
     * Converts content-link into an Content reference class instance
     * @param fragment
     */
    ContentMapper.prototype.convertContentReference = function (fragment) {
        if (ContentReference_1.ContentReference.isContentReference(fragment)) {
            var result = new ContentReference_1.ContentReference(fragment);
            return result;
        }
    };
    /**
     * Converts image-link into an Image class instance
     * @param fragment
     */
    ContentMapper.prototype.convertImage = function (fragment) {
        if (Image_1.Image.isImage(fragment)) {
            var result = new Image_1.Image(fragment, this.config);
            return result;
        }
    };
    /**
     * Converts image-link into an Image class instance
     * @param fragment
     */
    ContentMapper.prototype.convertVideo = function (fragment) {
        if (Video_1.Video.isVideo(fragment)) {
            var result = new Video_1.Video(fragment, this.config);
            return result;
        }
    };
    return ContentMapper;
}());
exports.ContentMapper = ContentMapper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudE1hcHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC9tYXBwZXIvQ29udGVudE1hcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEscURBQXdEO0FBQ3hELHNEQUFxRDtBQUNyRCxvREFBbUQ7QUFFbkQsMkNBQTBDO0FBQzFDLDJDQUEwQztBQUMxQyw4REFBNkQ7QUFVN0Q7Ozs7R0FJRztBQUNIO0lBR0UsdUJBQTZCLE1BQTJCO1FBQTNCLFdBQU0sR0FBTixNQUFNLENBQXFCO1FBRjlDLFlBQU8sR0FBc0IsRUFBRSxDQUFDO1FBR3hDLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsaUNBQVMsR0FBVCxVQUFVLE1BQXVCLEVBQUUsRUFBbUI7UUFDcEQsSUFBSSxPQUFPLE1BQU0sS0FBSyxRQUFRLEVBQUU7WUFDOUIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFBLFFBQVE7Z0JBQzNCLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssTUFBTSxFQUFFO29CQUNwQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDckI7WUFDSCxDQUFDLENBQUMsQ0FBQztTQUNKO2FBQU07WUFDTCxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQUEsUUFBUTtnQkFDM0IsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7b0JBQ3RDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2lCQUNyQjtZQUNILENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsdUNBQWUsR0FBZixVQUFnQixFQUFtQjtRQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN4QixD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